    name: Upload Github Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
    - name: Create artifacts directory
      run: mkdir artifacts
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
    - name: Save release upload URL to artifact
      run: echo "${{ steps.release.outputs.upload_url }}" > artifacts/release-upload-url
    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: artifacts
  build-release:
    name: Build Release
    needs: ["create-release"]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build:
          - linux
          - macos
          - windows
        include:
          - build: linux
            os: ubuntu-latest
          - build: macos
            os: macos-latest
          - build: windows
            os: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
          python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer
        pip3 install coverage
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install Zip 
      run: choco install zip 
      if: matrix.os == 'windows-latest'
    - name: Set release upload URL
      shell: bash
      id: release_info
      run: |
        release_upload_url="$(cat artifacts/release-upload-url)"
        echo "::set-env name=RELEASE_UPLOAD_URL::$release_upload_url"
    - name: Build with pyinstaller
      run: |
        ./scripts/build
      env:
        TRAVIS_OS_NAME: ${{ matrix.build }}
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.RELEASE_UPLOAD_URL }} 
        asset_path: ./dist/build/sperf-${{ matrix.build }}.zip
        asset_name: sperf-${{ matrix.build }}.zip
        asset_content_type: application/zip
